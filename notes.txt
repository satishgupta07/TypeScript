Superset of JavaScript -> build up on JavaScript

Types and safety

Types enable faster development

Compiles to plain JavaScript 

Cross-platform

Open-source

-----------------------------------------------

npm install -g typescript

tsc -version

-----------------------------------------------

Variables :

var -> Globally available in the function in which it is declared
       "Hoisted" to the top of hte function
       Variable name may be declared a second time in the function 

let and const -> Only available in the block in which it is declared
                 Not "hoisted" to the top of the block
                 Variable name may only be declared once per block

-----------------------------------------------

Basic Types :

1.Boolean
2.Number
3.String
4.Array
5.Enum
6.Any
7.Void

------------------------------------------------

Type Inference :  type inference is used to provide type information when there is no 
                  explicit type annotation

------------------------------------------------

Array : Array types can be written in one of two ways

let list: number[] = [1, 2, 3];
let list: Array<number> = [1, 2, 3];

Tuple : Tuple types allow you to express an array with a fixed number of elements whose
        types are known, but need not be the same

let x: [string, number];

-----------------------------------------------------

Function - Optional and Default Parameters

Optional parameters denoted with "?" after parameter name

Rest Parameters -> Collects a group of parameters into a single array
                   Denoted with an ellipsis prefix on last parameter

function getBooksReadForCust(name: string, ...bookIDs: number[]) { }  
let books = getBooksReadForCust('Leigh', 2, 5);     
let books = getBooksReadForCust('Daniel', 2, 5, 12, 42);               